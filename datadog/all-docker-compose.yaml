
#Use when service and agent are running on docker
version: '3'
services:
  client:
    container_name: client
    restart: always
    build: 
      context: ../
      dockerfile: dockerfile.client
    ports:
      - 8080:8080
    labels:
      - com.datadoghq.tags.service="client"
      - com.datadoghq.tags.env="dev"
      - com.datadoghq.tags.version="0.0.1"
    environment:
      - DD_ENV=dev
      - DD_VERSION=0.0.1
      - DD_AGENT_HOST=datadog-agent
      - CALENDAR_HOST=calendar
      - DD_LOGS_INJECTION=true
    depends_on:
      - server
      - datadog-agent
      - rabbitmq

  server:
    container_name: server
    restart: always
    build: 
      context: ../
      dockerfile: dockerfile.server
    labels:
       - com.datadoghq.tags.service="server"
       - com.datadoghq.tags.env="dev"
       - com.datadoghq.tags.version="0.0.1"
    environment:
       - DD_ENV=dev
       - DD_VERSION=0.0.1
       - DD_AGENT_HOST=datadog-agent
       - DD_LOGS_INJECTION=true
    ports:
      - 9090:9090
    depends_on:
      - datadog-agent
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
     - "5672:5672"
     - "15672:15672"
    environment:
     - RABBITMQ_DEFAULT_USER=guest
     - RABBITMQ_DEFAULT_PASS=guest

  datadog-agent:
    container_name: datadog-agent
    image: "gcr.io/datadoghq/agent:latest"
    pid: host
    ports:
      - 8126:8126
    environment:
      # use args to pass in the API key
      - DD_API_KEY=${DD_API_KEY}
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true
      - DD_LOGS_ENABLED=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro 
      
